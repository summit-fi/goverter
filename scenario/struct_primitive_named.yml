input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            Convert(source Input) Output
            ConvertBack(source Output) Input
        }

        type Input struct {
            ID string
            Name string
            Age int
        }
        type Output struct {
            ID ID
            Name string
            Age int
        }

        type ID string
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/summit-fi/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.ID = execution.ID(source.ID)
        	structsOutput.Name = source.Name
        	structsOutput.Age = source.Age
        	return structsOutput
        }
        func (c *ConverterImpl) ConvertBack(source execution.Output) execution.Input {
        	var structsInput execution.Input
        	structsInput.ID = string(source.ID)
        	structsInput.Name = source.Name
        	structsInput.Age = source.Age
        	return structsInput
        }
