input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:extend ConvertUnderlying
        type Converter interface {
            // goverter:useUnderlyingTypeMethods
            Convert(source Input) Output
        }

        func ConvertUnderlying(s int) OutputID {
            return ""
        }

        type InputID  int
        type OutputID string

        type Input struct  { ID InputID  }
        type Output struct { ID OutputID }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.ID = execution.ConvertUnderlying(int(source.ID))
        	return structsOutput
        }
