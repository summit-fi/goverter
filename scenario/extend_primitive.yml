input:
    input.go: |
        package slices

        // goverter:converter
        // goverter:extend Conv
        type Converter interface {
            Convert(source string) (*int, error)
        }

        func Conv(string) (int, error) {
            return 0, nil
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/summit-fi/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source string) (*int, error) {
        	xint, err := execution.Conv(source)
        	if err != nil {
        		return nil, err
        	}
        	pInt := xint
        	return &pInt, nil
        }
