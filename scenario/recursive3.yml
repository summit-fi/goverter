input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            Convert(source *Input) *Output
        }

        type Input struct {
            Name string
            Age int
            Value *Input
        }
        type Output struct {
            Name string
            Age int
            Value *Output
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/summit-fi/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source *execution.Input) *execution.Output {
        	var pStructsOutput *execution.Output
        	if source != nil {
        		var structsOutput execution.Output
        		structsOutput.Name = (*source).Name
        		structsOutput.Age = (*source).Age
        		structsOutput.Value = c.Convert((*source).Value)
        		pStructsOutput = &structsOutput
        	}
        	return pStructsOutput
        }
