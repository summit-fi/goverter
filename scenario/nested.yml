input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            Convert(source DBModel) ApiModel
        }

        type DBModel struct {
            Inner DBInner
        }
        type DBInner struct {
            Name string
            Value int
        }

        type ApiModel struct {
            Inner ApiInner
        }
        type ApiInner struct {
            Name string
            Value int
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.DBModel) execution.ApiModel {
        	var structsApiModel execution.ApiModel
        	structsApiModel.Inner = c.structsDBInnerToStructsApiInner(source.Inner)
        	return structsApiModel
        }
        func (c *ConverterImpl) structsDBInnerToStructsApiInner(source execution.DBInner) execution.ApiInner {
        	var structsApiInner execution.ApiInner
        	structsApiInner.Name = source.Name
        	structsApiInner.Value = source.Value
        	return structsApiInner
        }
