input:
    go.mod: |-
        module github.com/emp1re/goverter-test/execution
        go 1.18
    input.go: |
        package execution

        // goverter:converter
        type Converter interface {
            Convert(source InputWrapper[Input]) OutputWrapper[Output]
        }

        type InputWrapper[S any] struct {
            Value S
        }
        type OutputWrapper[S any] struct {
            Value S
        }

        type Input struct {
            Name string
            Age int
        }
        type Output struct {
            Name string
            Age int
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.InputWrapper[execution.Input]) execution.OutputWrapper[execution.Output] {
        	var executionOutputWrapper execution.OutputWrapper[execution.Output]
        	executionOutputWrapper.Value = c.executionInputToExecutionOutput(source.Value)
        	return executionOutputWrapper
        }
        func (c *ConverterImpl) executionInputToExecutionOutput(source execution.Input) execution.Output {
        	var executionOutput execution.Output
        	executionOutput.Name = source.Name
        	executionOutput.Age = source.Age
        	return executionOutput
        }
