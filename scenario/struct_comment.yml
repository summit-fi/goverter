input:
    input.go: |
        package example

        // goverter:struct:comment // MyConverterImpl
        // goverter:struct:comment //
        // goverter:struct:comment // More detailed
        // goverter:converter
        type MultipleSingleLine interface {
            Convert(Input) Output
        }

        // goverter:converter
        // goverter:struct:comment single comment
        type SingleComment interface {
            Convert(Input) Output
        }

        // goverter:converter
        // goverter:struct:comment MyConverterImpl
        // goverter:struct:comment
        // goverter:struct:comment More detailed
        type MultiLine interface {
            Convert(Input) Output
        }

        type Input struct { Name    string }
        type Output struct { Name    string }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        /*
        MyConverterImpl

        More detailed
        */
        type MultiLineImpl struct{}

        func (c *MultiLineImpl) Convert(source execution.Input) execution.Output {
        	var exampleOutput execution.Output
        	exampleOutput.Name = source.Name
        	return exampleOutput
        }

        // MyConverterImpl
        //
        // More detailed
        type MultipleSingleLineImpl struct{}

        func (c *MultipleSingleLineImpl) Convert(source execution.Input) execution.Output {
        	var exampleOutput execution.Output
        	exampleOutput.Name = source.Name
        	return exampleOutput
        }

        // single comment
        type SingleCommentImpl struct{}

        func (c *SingleCommentImpl) Convert(source execution.Input) execution.Output {
        	var exampleOutput execution.Output
        	exampleOutput.Name = source.Name
        	return exampleOutput
        }
