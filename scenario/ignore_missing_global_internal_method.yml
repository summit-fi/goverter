input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:ignoreMissing
        type Converter interface {
            Convert(source Input) Output
        }

        type Input struct {
            Nested NestedInput
        }
        type Output struct {
            Nested NestedOutput
        }
        type NestedInput struct {
            Name string
        }
        type NestedOutput struct {
            Name string
            Age  string
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.Nested = c.structsNestedInputToStructsNestedOutput(source.Nested)
        	return structsOutput
        }
        func (c *ConverterImpl) structsNestedInputToStructsNestedOutput(source execution.NestedInput) execution.NestedOutput {
        	var structsNestedOutput execution.NestedOutput
        	structsNestedOutput.Name = source.Name
        	return structsNestedOutput
        }
