input:
    input.go: |
        package structs

            // goverter:converter
            type Converter interface {
            // goverter:map Phone Phones
            Convert(Person) ResultPerson
        }

            type Person struct {
            Name  string
            Phone Phone
        }

            type ResultPerson struct {
            Name   string
            Phones []Phone
        }

            type Phone struct {
            Number      string
            CountryCode string
        }

success:
    -   generated/generated.go: |
            // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

            package generated

            import execution "github.com/emp1re/goverter-test/execution"

            type ConverterImpl struct{}

            func (c *ConverterImpl) Convert(source execution.Person) execution.ResultPerson {
            	var structsResultPerson execution.ResultPerson
            	structsResultPerson.Name = source.Name
            	structsResultPerson.Phones = c.structsPhoneToStructsPhoneList(source.Phone)
            	return structsResultPerson
            }
            func (c *ConverterImpl) structsPhoneToStructsPhoneList(source execution.Phone) []execution.Phone {
            	structsPhoneList := []execution.Phone{source}
            	return structsPhoneList
            }
