input:
    input.go: |
        package execution

        // goverter:converter
        type Converter interface {
            // goverter:default NewOutput
            Convert(source Input) (Output, error)
        }

        type Input struct {
            ID int
        }
        type Output struct {
            ID int
        }
        func NewOutput() (Output, error) {
            return Output{}, nil
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) (execution.Output, error) {
        	executionOutput, err := execution.NewOutput()
        	if err != nil {
        		return executionOutput, err
        	}
        	executionOutput.ID = source.ID
        	return executionOutput, nil
        }
