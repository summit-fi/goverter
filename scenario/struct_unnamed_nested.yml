input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            ConvertHouse(source Input) Output
        }

        type Input struct {
            House struct {
                Name string
                Inner struct {Z string}
            }
        }

        type Output struct {
            House struct {
                Name string
                Inner struct {Z string `json:"y"`}
            }
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) ConvertHouse(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	var unnamed struct {
        		Name  string
        		Inner struct {
        			Z string `json:"y"`
        		}
        	}
        	unnamed.Name = source.House.Name
        	var unnamed2 struct {
        		Z string `json:"y"`
        	}
        	unnamed2.Z = source.House.Inner.Z
        	unnamed.Inner = unnamed2
        	structsOutput.House = unnamed
        	return structsOutput
        }
