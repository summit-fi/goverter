input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:map A.B.Relative Absolute | ToAbsolute
            ConvertPerson(source Input) Output
        }

        type Input struct {
            A A
        }
        type A struct {
            B B
        }
        type B struct {
            Relative string
        }

        type Output struct {
            Absolute string
        }

        func ToAbsolute(s string) string {
            return "https://example.org/" + s
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/emp1re/goverter-test/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) ConvertPerson(source execution.Input) execution.Output {
        	var structsOutput execution.Output
        	structsOutput.Absolute = execution.ToAbsolute(source.A.B.Relative)
        	return structsOutput
        }
