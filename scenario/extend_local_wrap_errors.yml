input:
    input.go: |
        package structs

        type Enum1 int
        type Enum2 string

        // goverter:converter
        // goverter:extend strconv:Atoi
        // goverter:wrapErrors
        type Converter interface {
            Convert(source Input) (Output, error)
        }

        type Input struct {
            PostalCode string
        }
        type Output struct {
            PostalCode int
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import (
        	"fmt"
        	execution "github.com/emp1re/goverter-test/execution"
        	"strconv"
        )

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) (execution.Output, error) {
        	var structsOutput execution.Output
        	xint, err := strconv.Atoi(source.PostalCode)
        	if err != nil {
        		return structsOutput, fmt.Errorf("error setting field PostalCode: %w", err)
        	}
        	structsOutput.PostalCode = xint
        	return structsOutput, nil
        }
