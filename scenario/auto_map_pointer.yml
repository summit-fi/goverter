input:
    input.go: |
        package example

        // goverter:converter
        type Converter interface {
            // goverter:autoMap Address
            Convert(Person) FlatPerson
        }

        type FlatPerson struct {
            Name    string
            Age     int
            Street  *string
        }
        type Person struct {
            Name    string
            Age     int
            Address *Address
        }
        type Address struct {
            Street  string
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/summit-fi/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Person) execution.FlatPerson {
        	var exampleFlatPerson execution.FlatPerson
        	exampleFlatPerson.Name = source.Name
        	exampleFlatPerson.Age = source.Age
        	var pString *string
        	if source.Address != nil {
        		pString = &source.Address.Street
        	}
        	var pString2 *string
        	if pString != nil {
        		xstring := *pString
        		pString2 = &xstring
        	}
        	exampleFlatPerson.Street = pString2
        	return exampleFlatPerson
        }
